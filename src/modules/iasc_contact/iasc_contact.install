<?php

/**
 * @file
 * Install file for IASC Contact.
 */

/**
 * Implements hook_update_N().
 *
 * Remove field contact body.
 */
function iasc_contact_update_7000() {
  field_delete_field('field_contact_body');
  field_purge_batch(10);
}

/**
 * Implements hook_update_N().
 *
 * Remove all of the field bases that features doesn't remove.
 */
function iasc_contact_update_7001() {
  /* These fields were removed from the feature.
  At the time we did a site install, but apparently removing a previously
  defined field from a feature doesn't remove it from the field_base.inc and
  feature.info file. Since we are no longer doing site installs we need to
  remove these fields programmatically :/
  */
  field_delete_field('field_building');
  field_delete_field('field_country');
  field_delete_field('field_email_other');
  field_delete_field('field_email_web');
  field_delete_field('field_mobile_other');
  field_delete_field('field_mobile_web');
  field_delete_field('field_organization');
  field_delete_field('field_phone_other');
  field_delete_field('field_phone_web');
  field_delete_field('field_post_code');
  field_delete_field('field_province');
  field_delete_field('field_street');
  field_delete_field('field_suffix');
  field_purge_batch(10);
}

/**
 * Implements hook_update_N().
 *
 * Update all contacts missing value for title_field.
 */
function iasc_contact_update_7002() {
  // Get all contacts that don't have an entry in title_field.
  $result = db_query("SELECT n.nid, n.title FROM {node} n
      LEFT OUTER JOIN {field_data_title_field} t
      ON n.nid = t.entity_id
      WHERE t.entity_id IS NULL
      AND n.type = 'contact'")
    ->fetchAll();

  if ($result) {
    foreach ($result as $contact) {
      $node = node_load($contact->nid);

      // Update the title fields.
      $node->title = $contact->title;
      $node->title_original = $contact->title;
      $node->title_field[LANGUAGE_NONE][0] = array(
        'value' => $contact->title,
        'format' => NULL,
        'safe_value' => $contact->title,
      );

      node_save($node);

      watchdog('iasc_contact', "Updated contact: %nid, %title", array(
        '%nid' => $contact->nid,
        '%title' => $contact->title)
      );
    }
  }
}

/**
 * Implements hook_update_N().
 *
 * Remove Organization address fields.
 *
 * These are unnecessary.
 */
function iasc_contact_update_7003() {
  field_delete_field('field_org_address');
  field_delete_field('field_org_phone');
  field_delete_field('field_org_fax');
  field_purge_batch(10);
}

/**
 * Consolidate all organization addresses.
 *
 * Associate the addresses with the organization term.
 */
function iasc_contact_update_7004() {
  // Make sure we get the new fields applied to taxonomy organzation terms.
  features_revert_module('iasc_taxonomy');

  // Get the vocabulary for the Organizations.
  $org_vocab = taxonomy_vocabulary_machine_name_load('hosts');

  // Get all the terms in this vocabulary.
  $terms = taxonomy_get_tree($org_vocab->vid);

  foreach ($terms as $term) {
    // Check to see if we have a Contact associated with this term.
    $results = db_query("SELECT entity_id
      FROM field_data_field_organisation
      WHERE field_organisation_tid = :tid;",
      array(':tid' => $term->tid))
      ->fetchCol();

    if ($results) {
      // The whole entity is not fully loaded. We have to load the entire entity.
      $organization = taxonomy_term_load($term->tid);

      $addresses = array();
      $contacts = node_load_multiple($results);
      // Now loop thru the returned Contact entities
      foreach ($contacts as $contact) {
        if (!empty($contact->field_address)) {
          // Render the addresses in a user-friendly format for easy comparison.
          $items = field_get_items('node', $contact , 'field_address');
          $items[0]['organisation_name'] = '';

          if (!in_array($items[0], $addresses)) {
            $addresses[] = $items[0];
          }
        }
      }

      // Watchdog the address collection
      watchdog('iasc_contact', "Found :num distinct addresses for term :term",
        array(':num' => count($addresses), ':term' => $organization->name)
      );

      // Add these addresses to the taxonomy term
      foreach ($addresses as $address) {
        $organization->field_addresses[LANGUAGE_NONE][] = $address;
      }

      if (taxonomy_term_save($organization)) {
        watchdog('iasc_contact', "Saved new addresses for the term :term",
          array(':term' => $organization->name)
        );
      }
      else {
        watchdog('iasc_contact', "Could not save new addresses for the term :term",
          array(':term' => $organization->name), WATCHDOG_ERROR
        );
      }

    }
  }
}