<?php
/**
 * @file
 * Code for the iasc_document feature.
 */

include_once 'iasc_document.features.inc';

/**
 * Implements hook_ctools_plugin_directory().
 */
function iasc_document_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'ctools' && $plugin_type == 'content_types') {
    return 'plugins/content_types';
  }
}

/**
 * Implements hook_theme().
 */
function iasc_document_theme($existing, $type, $theme, $path) {
  $theme = array(
    'document_login_cta' => array(
      'template' => 'document-login-cta',
      'path' => drupal_get_path('module', 'iasc_document') . '/templates',
      'variables' => array(
        'dest' => '',
      ),
    ),
  );

  return $theme;
}

/**
 * Implements hook_block_info().
 */
function iasc_document_block_info() {
  $blocks['document_login_cta'] = array(
    'info' => t('Document - Login CTA'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function iasc_document_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'document_login_cta':
      $block['subject'] = NULL;
      $dest = drupal_get_path_alias();
      $block['content'] = array(
        '#theme' => 'document_login_cta',
        '#dest' => drupal_get_path_alias(),
      );
      break;
  }
  return $block;
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function iasc_document_form_node_form_alter(&$form, &$form_state, $form_id) {
  $content_type = $form['#node']->type;
  if ('oa_wiki_page' == $content_type) {

    global $user;
    if (array_search('administrator', $user->roles) === FALSE) {
      $form['field_legacy_publish']['#access'] = FALSE;
    }

    $product_term = taxonomy_get_term_by_name('Product', 'document_types');
    if ($product_term) {
      $product_term = current($product_term);
      $state = array(
        'visible' => array(
          ':input[name="field_document_type[und]"]' => array('value' => $product_term->tid),
        ),
      );

      // Show Product Category only for Products.
      $form['field_category']['#states'] = $state;

      // Show Product Thumbnail only for Products.
      $form['field_product_thumbnail']['#states'] = $state;

      // Show Feature flag only for Products.
      $form['flag']['featured']['#states'] = $state;
    }

    // Label should be Published date if Document is selected.
    $document_term = taxonomy_get_term_by_name('Document', 'document_types');
    if ($document_term) {
      $document_term = current($document_term);
      $state = array(
        'visible' => array(
          ':input[name="field_document_type[und]"]' => array('value' => $document_term->tid),
        ),
      );

      // Show Document No. only for Documents.
      $form['field_document_no']['#states'] = $state;
    }
  }
}

/**
 * Connect an existing file to the Drupal file system.
 */
function iasc_document_connect_file() {
  $result = db_select('iasc_scrape', 'sc')
    ->fields('sc', array('filename', 'entity_id', 'legacy_fid'))
    ->condition('type', array('document', 'product'), 'IN')
    ->condition('managed_fid', 0)
    ->condition('legacy_fid', 0, '<>')
    ->condition('file_save', 1)
    ->condition('filename', '', '<>')
    ->range(0, 1)
    ->execute()
    ->fetchAssoc();

  $filename = (isset($result['filename'])) ? $result['filename'] : 0;

  if ($filename) {
    $uri = 'private://legacy_files/' . $filename;
    $file = new stdClass();
    $file->fid = NULL;
    $file->uri = $uri;
    $file->filename = drupal_basename($uri);
    $file->filemime = file_get_mimetype($file->uri);
    $file->uid = 1;
    $file->display = 1;
    $file->status = FILE_STATUS_PERMANENT;
    $existing_files = file_load_multiple(array(), array('uri' => $uri));
    if (count($existing_files)) {
      $existing = reset($existing_files);
      $file->fid = $existing->fid;
      $file->filename = $existing->filename;
    }
    file_save($file);

    if (isset($file->fid)) {
      drupal_set_message(t('File @fid - @name saved.', array(
        '@fid' => $file->fid,
        '@name' => $file->filename,
      )));
      $legacy_fid = (isset($result['legacy_fid'])) ? $result['legacy_fid'] : 0;
      db_merge('iasc_scrape')
        ->key(array('legacy_fid' => $legacy_fid))
        ->fields(array(
          'managed_fid' => $file->fid,
        ))
        ->execute();

      // Entity id.
      $entity_id = (isset($result['entity_id'])) ? $result['entity_id'] : 0;
      if ($entity_id) {
        $wrapper = entity_metadata_wrapper('node', $entity_id);
        $entity = $wrapper->value();
        // This is insane.
        $file = (array) $file;
        $items = array($file);
        $wrapper->field_oa_media->set($items);

        // Save the entity.
        $wrapper->save(TRUE);
        entity_save('node', $entity);
        drupal_set_message(t('File @fid connected to node @nid.', array(
          '@fid' => $file->fid,
          '@nid' => $entity->nid,
        )));
      }
    }
  }
}

/**
 * Implements hook_panels_pane_content_alter().
 */
function iasc_document_panels_pane_content_alter(&$content, $pane, $args, $contexts) {
  if ('oa_widgets_content_visibility' == $pane->type) {
    // Don't show the "Content Visibility" block title.
    unset($content->title);
  }

}
